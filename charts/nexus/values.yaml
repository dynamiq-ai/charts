# Default values for nexus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dynamiqai/nexus
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: [{ name: docker-registry }]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    memory: 256Mi
    cpu: 250m
  limits:
    memory: 512Mi
    cpu: 500m
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 5
readinessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

configMapData:
  ENV: prod
  SYNAPSE_URL: 'http://synapse.synapse.svc.cluster.local:80'
  CATALYST_URL: 'http://catalyst.catalyst.svc.cluster.local:80'
  APP_NAMESPACE: apps
  AUTH_ACCESS_TOKEN_TTL: 1h
  AUTH_REFRESH_TOKEN_TTL: 240h
  AUTH_VERIFICATION_TOKEN_TTL: 12h
  BILLING_ENABLED: 'false'
  FINE_TUNING_DOCKER_IMAGE: 'dynamiqai/fine-tuning:0.3.8'
  FINE_TUNING_NAMESPACE: fine-tuning
  FINE_TUNING_SERVICE_ACCOUNT: fine-tuning
  FINE_TUNING_IMAGE_PULL_SECRET: docker-registry
  IMAGE_BUILDER_DOCKER_IMAGE: 'gcr.io/kaniko-project/executor:v1.23.1'
  IMAGE_BUILDER_NAMESPACE: image-builder
  IMAGE_BUILDER_SERVICE_ACCOUNT: image-builder
  INFERENCE_DOCKER_IMAGE: 'ghcr.io/predibase/lorax:387e17e'
  INFERENCE_NAMESPACE: inferences
  INFERENCE_SERVICE_ACCOUNT: inference
  SERVICE_IMAGE_REPOSITORY: 128336707324.dkr.ecr.us-east-1.amazonaws.com/service
  SERVICE_NAMESPACE: services
  SERVICE_SERVICE_ACCOUNT: service
  STORAGE_SERVICE: s3

secretData: {}

dbSecretData: {}